#!/usr/bin/env bash

set -e

# replace compiler artefacts with the artefacts built from source code

if [ -z "$PROG_HOME" ] ; then
  ## resolve links - $0 may be a link to PROG_HOME
  PRG="$0"

  # need this for relative symlinks
  while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
      PRG="$link"
    else
      PRG="`dirname "$PRG"`/$link"
    fi
  done

  saveddir=`pwd`

  PROG_HOME=`dirname "$PRG"`/..

  # make it fully qualified
  PROG_HOME=`cd "$PROG_HOME" && pwd`

  cd "$saveddir"
fi

find_lib () {
  local lib=$(find $1 -name "$2")
  echo $lib
}

cd $PROG_HOME/dotty
sbt "dotty/clean" "dotty/package"
sbt "dotty-interfaces/clean" "dotty-interfaces/package"
sbt "dotty-library/clean"  "dotty-library/package"

DOTTY_COMP=$(find_lib $PROG_HOME/dotty/compiler/target/scala-2.11 "*dotty-compiler*.jar")
DOTTY_INTF=$(find_lib $PROG_HOME/dotty/interfaces/target "*dotty-interfaces*.jar")
DOTTY_LIB=$(find_lib $PROG_HOME/dotty/library/target/scala-2.11 "*dotty-library*.jar")

cd $PROG_HOME
DEST_DOTTY_COMP=$(find_lib $PROG_HOME/target/pack/lib "*dotty-compiler*.jar")
DEST_DOTTY_INTF=$(find_lib $PROG_HOME/target/pack/lib "*dotty-interfaces*.jar")
DEST_DOTTY_LIB=$(find_lib $PROG_HOME/target/pack/lib "*dotty-library*.jar")

cp $DOTTY_COMP $DEST_DOTTY_COMP
cp $DOTTY_INTF $DEST_DOTTY_INTF
cp $DOTTY_LIB  $DEST_DOTTY_LIB
